pipeline {
    agent any
    environment {
        DB_ENV = credentials('db.env')
        PRESTA_ENV = credentials('presta.env')
    }
    stages {
        stage('Clean') {
            steps {
                cleanWs()
                echo 'Espace de travail nettoyé.'
            }
        }

        stage('Checkout') {
            steps {
                // Récupérer le code source depuis GitHub
                checkout([$class: 'GitSCM',
                        branches: [[name: 'nasim']], // Spécifiez la branche souhaitée
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [[$class: 'CleanBeforeCheckout'], [$class: 'RelativeTargetDirectory', relativeTargetDir: '']], 
                        userRemoteConfigs: [[credentialsId: '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', url: 'https://github.com/Projetits/Project-B-Its.git']]]
                )
                echo 'Code source récupéré depuis GitHub.'
            }
        }

        stage('Build') {
            steps {
                // Cette étape peut inclure la construction de votre application, par exemple, en utilisant un script ou une commande
                sh 'cd ./microA/app/ && docker-compose up -d'
                echo 'Installation de Prestashop & Installation Micro-Services'
            }
        }

        stage('Test') {
            steps {
                dir ('./microA/app'){
                    script {
                        // Installer pytest si ce n'est pas déjà fait
                        sh 'pip install pytest'
                        // Exécute les tests de l'application
                        sh 'pytest'
                        // sortie des tests
                        sh 'pytest test_app.py'
                    }
                }
            }
        }

        stage('Deploy') {
            steps {
                // Cette étape peut inclure le déploiement de votre micro-service, par exemple, en utilisant Docker Compose
                sh 'docker-compose up -d'
            }
        }
    }

    post {
        success {
            // Cette section spécifie ce qui doit être fait en cas de succès du pipeline
            echo 'Le pipeline a réussi!'

            // Vous pouvez ajouter des actions supplémentaires ici, comme la notification par email
        }

        failure {
            // Cette section spécifie ce qui doit être fait en cas d'échec du pipeline
            echo 'Le pipeline a échoué!'

            // Vous pouvez ajouter des actions supplémentaires ici, comme l'envoi d'une notification d'échec
        }
    }
}
